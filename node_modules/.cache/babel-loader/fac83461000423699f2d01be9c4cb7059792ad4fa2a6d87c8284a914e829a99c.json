{"ast":null,"code":"var _jsxFileName = \"/Users/valentinodenona/Desktop/REACT/aplikacija-lov/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nconst express = require('express');\nconst mysql = require('mysql');\nconst bodyParser = require('body-parser');\nconst app = express();\nconst port = 3000;\n\n// Konfiguracija za povezivanje na MySQL bazu\nconst pool = mysql.createPool({\n  connectionLimit: 10,\n  // Maksimalni broj veza\n  host: 'localhost',\n  // Host baze podataka\n  user: 'your_username',\n  // Vaše korisničko ime\n  password: 'your_password',\n  // Vaša lozinka\n  database: 'your_database' // Ime baze podataka\n});\n\n// Middleware za parsiranje JSON tijela zahtjeva\napp.use(bodyParser.json());\n\n// POST zahtjev za unos podataka\napp.post('/unos', (req, res) => {\n  const data = req.body;\n  pool.query('INSERT INTO odstrijeli SET ?', data, (error, results, fields) => {\n    if (error) {\n      res.status(500).send({\n        message: 'Greška pri unosu u bazu podataka',\n        error\n      });\n    } else {\n      res.status(201).send({\n        message: 'Podaci su uspješno uneseni',\n        results\n      });\n    }\n  });\n});\n\n// Ovdje dodajte dodatne rute za CRUD ako je potrebno\n\n// Pokretanje servera\napp.listen(port, () => {\n  console.log(`Server sluša na portu ${port}`);\n});","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","express","require","mysql","bodyParser","app","port","pool","createPool","connectionLimit","host","user","password","database","use","json","post","req","res","data","body","query","error","results","fields","status","send","message","listen","console","log"],"sources":["/Users/valentinodenona/Desktop/REACT/aplikacija-lov/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\nconst express = require('express');\nconst mysql = require('mysql');\nconst bodyParser = require('body-parser');\n\nconst app = express();\nconst port = 3000;\n\n// Konfiguracija za povezivanje na MySQL bazu\nconst pool = mysql.createPool({\n  connectionLimit: 10, // Maksimalni broj veza\n  host: 'localhost', // Host baze podataka\n  user: 'your_username', // Vaše korisničko ime\n  password: 'your_password', // Vaša lozinka\n  database: 'your_database' // Ime baze podataka\n});\n\n// Middleware za parsiranje JSON tijela zahtjeva\napp.use(bodyParser.json());\n\n// POST zahtjev za unos podataka\napp.post('/unos', (req, res) => {\n  const data = req.body;\n  pool.query('INSERT INTO odstrijeli SET ?', data, (error, results, fields) => {\n    if (error) {\n      res.status(500).send({ message: 'Greška pri unosu u bazu podataka', error });\n    } else {\n      res.status(201).send({ message: 'Podaci su uspješno uneseni', results });\n    }\n  });\n});\n\n// Ovdje dodajte dodatne rute za CRUD ako je potrebno\n\n// Pokretanje servera\napp.listen(port, () => {\n  console.log(`Server sluša na portu ${port}`);\n});\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTL,OAAA,CAACL,KAAK,CAACW,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACH,GAAG;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACA;AACA;AACAb,eAAe,CAAC,CAAC;AAGjB,MAAMc,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEzC,MAAMG,GAAG,GAAGJ,OAAO,CAAC,CAAC;AACrB,MAAMK,IAAI,GAAG,IAAI;;AAEjB;AACA,MAAMC,IAAI,GAAGJ,KAAK,CAACK,UAAU,CAAC;EAC5BC,eAAe,EAAE,EAAE;EAAE;EACrBC,IAAI,EAAE,WAAW;EAAE;EACnBC,IAAI,EAAE,eAAe;EAAE;EACvBC,QAAQ,EAAE,eAAe;EAAE;EAC3BC,QAAQ,EAAE,eAAe,CAAC;AAC5B,CAAC,CAAC;;AAEF;AACAR,GAAG,CAACS,GAAG,CAACV,UAAU,CAACW,IAAI,CAAC,CAAC,CAAC;;AAE1B;AACAV,GAAG,CAACW,IAAI,CAAC,OAAO,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC9B,MAAMC,IAAI,GAAGF,GAAG,CAACG,IAAI;EACrBb,IAAI,CAACc,KAAK,CAAC,8BAA8B,EAAEF,IAAI,EAAE,CAACG,KAAK,EAAEC,OAAO,EAAEC,MAAM,KAAK;IAC3E,IAAIF,KAAK,EAAE;MACTJ,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE,kCAAkC;QAAEL;MAAM,CAAC,CAAC;IAC9E,CAAC,MAAM;MACLJ,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE,4BAA4B;QAAEJ;MAAQ,CAAC,CAAC;IAC1E;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;;AAEA;AACAlB,GAAG,CAACuB,MAAM,CAACtB,IAAI,EAAE,MAAM;EACrBuB,OAAO,CAACC,GAAG,CAAE,yBAAwBxB,IAAK,EAAC,CAAC;AAC9C,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}