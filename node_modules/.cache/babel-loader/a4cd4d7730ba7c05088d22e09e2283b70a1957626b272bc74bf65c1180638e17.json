{"ast":null,"code":"var _jsxFileName = \"/Users/valentinodenona/Desktop/REACT/Aplikacija-za-lov/src/pages/SkeniranjeKoda.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { RNCamera } from 'expo-camera';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [qrCode, setQrCode] = useState('');\n  const handleBarCodeRead = ({\n    data\n  }) => {\n    setQrCode(data);\n    alert(`QR Code detected: ${data}`);\n  };\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(RNCamera, {\n      style: styles.preview,\n      onBarCodeRead: handleBarCodeRead,\n      barCodeTypes: [RNCamera.Constants.BarCodeType.qr],\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        style: styles.description,\n        children: qrCode ? `QR Code: ${qrCode}` : 'Scan a QR Code'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(QRScanner, \"mllj/JYPdze9TmrenfQyB5E/uek=\");\n_c = QRScanner;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: 'black'\n  },\n  preview: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  description: {\n    fontSize: 18,\n    color: 'white',\n    padding: 20,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)'\n  }\n});\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","RNCamera","jsxDEV","_jsxDEV","QRScanner","_s","qrCode","setQrCode","handleBarCodeRead","data","alert","style","styles","container","children","preview","onBarCodeRead","barCodeTypes","Constants","BarCodeType","qr","description","fileName","_jsxFileName","lineNumber","columnNumber","_c","create","flex","flexDirection","backgroundColor","justifyContent","alignItems","fontSize","color","padding","$RefreshReg$"],"sources":["/Users/valentinodenona/Desktop/REACT/Aplikacija-za-lov/src/pages/SkeniranjeKoda.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { RNCamera } from 'expo-camera';\n\nconst QRScanner = () => {\n    const [qrCode, setQrCode] = useState('');\n\n    const handleBarCodeRead = ({ data }) => {\n        setQrCode(data);\n        alert(`QR Code detected: ${data}`);\n    };\n\n    return (\n        <View style={styles.container}>\n            <RNCamera\n                style={styles.preview}\n                onBarCodeRead={handleBarCodeRead}\n                barCodeTypes={[RNCamera.Constants.BarCodeType.qr]}\n            >\n                <Text style={styles.description}>\n                    {qrCode ? `QR Code: ${qrCode}` : 'Scan a QR Code'}\n                </Text>\n            </RNCamera>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'column',\n        backgroundColor: 'black',\n    },\n    preview: {\n        flex: 1,\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n    },\n    description: {\n        fontSize: 18,\n        color: 'white',\n        padding: 20,\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    },\n});\n\nexport default QRScanner;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,IAAI,EAAEC,UAAU,QAAQ,cAAc;AACrD,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,iBAAiB,GAAGA,CAAC;IAAEC;EAAK,CAAC,KAAK;IACpCF,SAAS,CAACE,IAAI,CAAC;IACfC,KAAK,CAAE,qBAAoBD,IAAK,EAAC,CAAC;EACtC,CAAC;EAED,oBACIN,OAAA,CAACL,IAAI;IAACa,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,eAC1BX,OAAA,CAACF,QAAQ;MACLU,KAAK,EAAEC,MAAM,CAACG,OAAQ;MACtBC,aAAa,EAAER,iBAAkB;MACjCS,YAAY,EAAE,CAAChB,QAAQ,CAACiB,SAAS,CAACC,WAAW,CAACC,EAAE,CAAE;MAAAN,QAAA,eAElDX,OAAA,CAACJ,IAAI;QAACY,KAAK,EAAEC,MAAM,CAACS,WAAY;QAAAP,QAAA,EAC3BR,MAAM,GAAI,YAAWA,MAAO,EAAC,GAAG;MAAgB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEf,CAAC;AAACpB,EAAA,CArBID,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAuBf,MAAMQ,MAAM,GAAGZ,UAAU,CAAC2B,MAAM,CAAC;EAC7Bd,SAAS,EAAE;IACPe,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE,QAAQ;IACvBC,eAAe,EAAE;EACrB,CAAC;EACDf,OAAO,EAAE;IACLa,IAAI,EAAE,CAAC;IACPG,cAAc,EAAE,UAAU;IAC1BC,UAAU,EAAE;EAChB,CAAC;EACDX,WAAW,EAAE;IACTY,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,OAAO;IACdC,OAAO,EAAE,EAAE;IACXL,eAAe,EAAE;EACrB;AACJ,CAAC,CAAC;AAEF,eAAe1B,SAAS;AAAC,IAAAsB,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}