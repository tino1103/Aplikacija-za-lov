{"ast":null,"code":"var _jsxFileName = \"/Users/valentinodenona/Desktop/REACT/Aplikacija-za-lov/src/pages/SkeniranjeKoda.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QrReader from 'react-qr-reader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QrScanner() {\n  _s();\n  const [qrResult, setQrResult] = useState('');\n  const handleScan = data => {\n    if (data) {\n      setQrResult(data);\n    }\n  };\n  const handleError = err => {\n    console.error(err);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(QrReader, {\n      delay: 300,\n      onError: handleError,\n      onScan: handleScan,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: qrResult,\n      onChange: e => setQrResult(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(QrScanner, \"qOuJSR2b4UvAPKhavZq3SCyVMaE=\");\n_c = QrScanner;\nexport default QrScanner;\nvar _c;\n$RefreshReg$(_c, \"QrScanner\");","map":{"version":3,"names":["React","useState","QrReader","jsxDEV","_jsxDEV","QrScanner","_s","qrResult","setQrResult","handleScan","data","handleError","err","console","error","children","delay","onError","onScan","style","width","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/valentinodenona/Desktop/REACT/Aplikacija-za-lov/src/pages/SkeniranjeKoda.js"],"sourcesContent":["import React, { useState } from 'react';\nimport QrReader from 'react-qr-reader';\n\nfunction QrScanner() {\n    const [qrResult, setQrResult] = useState('');\n\n    const handleScan = data => {\n        if (data) {\n            setQrResult(data);\n        }\n    }\n\n    const handleError = err => {\n        console.error(err);\n    }\n\n    return (\n        <div>\n            <QrReader\n                delay={300}\n                onError={handleError}\n                onScan={handleScan}\n                style={{ width: '100%' }}\n            />\n            <input\n                type=\"text\"\n                value={qrResult}\n                onChange={(e) => setQrResult(e.target.value)}\n            />\n        </div>\n    );\n}\n\nexport default QrScanner;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMQ,UAAU,GAAGC,IAAI,IAAI;IACvB,IAAIA,IAAI,EAAE;MACNF,WAAW,CAACE,IAAI,CAAC;IACrB;EACJ,CAAC;EAED,MAAMC,WAAW,GAAGC,GAAG,IAAI;IACvBC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;EACtB,CAAC;EAED,oBACIR,OAAA;IAAAW,QAAA,gBACIX,OAAA,CAACF,QAAQ;MACLc,KAAK,EAAE,GAAI;MACXC,OAAO,EAAEN,WAAY;MACrBO,MAAM,EAAET,UAAW;MACnBU,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFpB,OAAA;MACIqB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEnB,QAAS;MAChBoB,QAAQ,EAAGC,CAAC,IAAKpB,WAAW,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAClB,EAAA,CA5BQD,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA8BlB,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}