{"ast":null,"code":"import { Animated, I18nManager } from 'react-native';\nconst {\n  add\n} = Animated;\n\n/**\n * Standard UIKit style animation for the header where the title fades into the back button label.\n */\nexport function forUIKit(_ref) {\n  let {\n    current,\n    next,\n    layouts\n  } = _ref;\n  const defaultOffset = 100;\n  const leftSpacing = 27;\n\n  // The title and back button title should cross-fade to each other\n  // When screen is fully open, the title should be in center, and back title should be on left\n  // When screen is closing, the previous title will animate to back title's position\n  // And back title will animate to title's position\n  // We achieve this by calculating the offsets needed to translate title to back title's position and vice-versa\n  const leftLabelOffset = layouts.leftLabel ? (layouts.screen.width - layouts.leftLabel.width) / 2 - leftSpacing : defaultOffset;\n  const titleLeftOffset = layouts.title ? (layouts.screen.width - layouts.title.width) / 2 - leftSpacing : defaultOffset;\n\n  // When the current title is animating to right, it is centered in the right half of screen in middle of transition\n  // The back title also animates in from this position\n  const rightOffset = layouts.screen.width / 4;\n  const progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  return {\n    leftButtonStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0.3, 1, 1.5],\n        outputRange: [0, 1, 0]\n      })\n    },\n    leftLabelStyle: {\n      transform: [{\n        translateX: progress.interpolate({\n          inputRange: [0, 1, 2],\n          outputRange: I18nManager.getConstants().isRTL ? [-rightOffset, 0, leftLabelOffset] : [leftLabelOffset, 0, -rightOffset]\n        })\n      }]\n    },\n    rightButtonStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0.3, 1, 1.5],\n        outputRange: [0, 1, 0]\n      })\n    },\n    titleStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 0.4, 1, 1.5],\n        outputRange: [0, 0.1, 1, 0]\n      }),\n      transform: [{\n        translateX: progress.interpolate({\n          inputRange: [0.5, 1, 2],\n          outputRange: I18nManager.getConstants().isRTL ? [-titleLeftOffset, 0, rightOffset] : [rightOffset, 0, -titleLeftOffset]\n        })\n      }]\n    },\n    backgroundStyle: {\n      transform: [{\n        translateX: progress.interpolate({\n          inputRange: [0, 1, 2],\n          outputRange: I18nManager.getConstants().isRTL ? [-layouts.screen.width, 0, layouts.screen.width] : [layouts.screen.width, 0, -layouts.screen.width]\n        })\n      }]\n    }\n  };\n}\n\n/**\n * Simple fade animation for the header elements.\n */\nexport function forFade(_ref2) {\n  let {\n    current,\n    next\n  } = _ref2;\n  const progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  const opacity = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0, 1, 0]\n  });\n  return {\n    leftButtonStyle: {\n      opacity\n    },\n    rightButtonStyle: {\n      opacity\n    },\n    titleStyle: {\n      opacity\n    },\n    backgroundStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 1, 1.9, 2],\n        outputRange: [0, 1, 1, 0]\n      })\n    }\n  };\n}\n\n/**\n * Simple translate animation to translate the header to left.\n */\nexport function forSlideLeft(_ref3) {\n  let {\n    current,\n    next,\n    layouts: {\n      screen\n    }\n  } = _ref3;\n  const progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  const translateX = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: I18nManager.getConstants().isRTL ? [-screen.width, 0, screen.width] : [screen.width, 0, -screen.width]\n  });\n  const transform = [{\n    translateX\n  }];\n  return {\n    leftButtonStyle: {\n      transform\n    },\n    rightButtonStyle: {\n      transform\n    },\n    titleStyle: {\n      transform\n    },\n    backgroundStyle: {\n      transform\n    }\n  };\n}\n\n/**\n * Simple translate animation to translate the header to right.\n */\nexport function forSlideRight(_ref4) {\n  let {\n    current,\n    next,\n    layouts: {\n      screen\n    }\n  } = _ref4;\n  const progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  const translateX = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: I18nManager.getConstants().isRTL ? [screen.width, 0, -screen.width] : [-screen.width, 0, screen.width]\n  });\n  const transform = [{\n    translateX\n  }];\n  return {\n    leftButtonStyle: {\n      transform\n    },\n    rightButtonStyle: {\n      transform\n    },\n    titleStyle: {\n      transform\n    },\n    backgroundStyle: {\n      transform\n    }\n  };\n}\n\n/**\n * Simple translate animation to translate the header to slide up.\n */\nexport function forSlideUp(_ref5) {\n  let {\n    current,\n    next,\n    layouts: {\n      header\n    }\n  } = _ref5;\n  const progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  const translateY = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [-header.height, 0, -header.height]\n  });\n  const transform = [{\n    translateY\n  }];\n  return {\n    leftButtonStyle: {\n      transform\n    },\n    rightButtonStyle: {\n      transform\n    },\n    titleStyle: {\n      transform\n    },\n    backgroundStyle: {\n      transform\n    }\n  };\n}\nexport function forNoAnimation() {\n  return {};\n}","map":{"version":3,"names":["Animated","I18nManager","add","forUIKit","_ref","current","next","layouts","defaultOffset","leftSpacing","leftLabelOffset","leftLabel","screen","width","titleLeftOffset","title","rightOffset","progress","interpolate","inputRange","outputRange","extrapolate","leftButtonStyle","opacity","leftLabelStyle","transform","translateX","getConstants","isRTL","rightButtonStyle","titleStyle","backgroundStyle","forFade","_ref2","forSlideLeft","_ref3","forSlideRight","_ref4","forSlideUp","_ref5","header","translateY","height","forNoAnimation"],"sources":["/Users/valentinodenona/Desktop/REACT/node_modules/@react-navigation/stack/src/TransitionConfigs/HeaderStyleInterpolators.tsx"],"sourcesContent":["import { Animated, I18nManager } from 'react-native';\n\nimport type {\n  StackHeaderInterpolatedStyle,\n  StackHeaderInterpolationProps,\n} from '../types';\n\nconst { add } = Animated;\n\n/**\n * Standard UIKit style animation for the header where the title fades into the back button label.\n */\nexport function forUIKit({\n  current,\n  next,\n  layouts,\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\n  const defaultOffset = 100;\n  const leftSpacing = 27;\n\n  // The title and back button title should cross-fade to each other\n  // When screen is fully open, the title should be in center, and back title should be on left\n  // When screen is closing, the previous title will animate to back title's position\n  // And back title will animate to title's position\n  // We achieve this by calculating the offsets needed to translate title to back title's position and vice-versa\n  const leftLabelOffset = layouts.leftLabel\n    ? (layouts.screen.width - layouts.leftLabel.width) / 2 - leftSpacing\n    : defaultOffset;\n  const titleLeftOffset = layouts.title\n    ? (layouts.screen.width - layouts.title.width) / 2 - leftSpacing\n    : defaultOffset;\n\n  // When the current title is animating to right, it is centered in the right half of screen in middle of transition\n  // The back title also animates in from this position\n  const rightOffset = layouts.screen.width / 4;\n\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  return {\n    leftButtonStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0.3, 1, 1.5],\n        outputRange: [0, 1, 0],\n      }),\n    },\n    leftLabelStyle: {\n      transform: [\n        {\n          translateX: progress.interpolate({\n            inputRange: [0, 1, 2],\n            outputRange: I18nManager.getConstants().isRTL\n              ? [-rightOffset, 0, leftLabelOffset]\n              : [leftLabelOffset, 0, -rightOffset],\n          }),\n        },\n      ],\n    },\n    rightButtonStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0.3, 1, 1.5],\n        outputRange: [0, 1, 0],\n      }),\n    },\n    titleStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 0.4, 1, 1.5],\n        outputRange: [0, 0.1, 1, 0],\n      }),\n      transform: [\n        {\n          translateX: progress.interpolate({\n            inputRange: [0.5, 1, 2],\n            outputRange: I18nManager.getConstants().isRTL\n              ? [-titleLeftOffset, 0, rightOffset]\n              : [rightOffset, 0, -titleLeftOffset],\n          }),\n        },\n      ],\n    },\n    backgroundStyle: {\n      transform: [\n        {\n          translateX: progress.interpolate({\n            inputRange: [0, 1, 2],\n            outputRange: I18nManager.getConstants().isRTL\n              ? [-layouts.screen.width, 0, layouts.screen.width]\n              : [layouts.screen.width, 0, -layouts.screen.width],\n          }),\n        },\n      ],\n    },\n  };\n}\n\n/**\n * Simple fade animation for the header elements.\n */\nexport function forFade({\n  current,\n  next,\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const opacity = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0, 1, 0],\n  });\n\n  return {\n    leftButtonStyle: { opacity },\n    rightButtonStyle: { opacity },\n    titleStyle: { opacity },\n    backgroundStyle: {\n      opacity: progress.interpolate({\n        inputRange: [0, 1, 1.9, 2],\n        outputRange: [0, 1, 1, 0],\n      }),\n    },\n  };\n}\n\n/**\n * Simple translate animation to translate the header to left.\n */\nexport function forSlideLeft({\n  current,\n  next,\n  layouts: { screen },\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const translateX = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: I18nManager.getConstants().isRTL\n      ? [-screen.width, 0, screen.width]\n      : [screen.width, 0, -screen.width],\n  });\n\n  const transform = [{ translateX }];\n\n  return {\n    leftButtonStyle: { transform },\n    rightButtonStyle: { transform },\n    titleStyle: { transform },\n    backgroundStyle: { transform },\n  };\n}\n\n/**\n * Simple translate animation to translate the header to right.\n */\nexport function forSlideRight({\n  current,\n  next,\n  layouts: { screen },\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const translateX = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: I18nManager.getConstants().isRTL\n      ? [screen.width, 0, -screen.width]\n      : [-screen.width, 0, screen.width],\n  });\n\n  const transform = [{ translateX }];\n\n  return {\n    leftButtonStyle: { transform },\n    rightButtonStyle: { transform },\n    titleStyle: { transform },\n    backgroundStyle: { transform },\n  };\n}\n\n/**\n * Simple translate animation to translate the header to slide up.\n */\nexport function forSlideUp({\n  current,\n  next,\n  layouts: { header },\n}: StackHeaderInterpolationProps): StackHeaderInterpolatedStyle {\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const translateY = progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [-header.height, 0, -header.height],\n  });\n\n  const transform = [{ translateY }];\n\n  return {\n    leftButtonStyle: { transform },\n    rightButtonStyle: { transform },\n    titleStyle: { transform },\n    backgroundStyle: { transform },\n  };\n}\n\nexport function forNoAnimation(): StackHeaderInterpolatedStyle {\n  return {};\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}