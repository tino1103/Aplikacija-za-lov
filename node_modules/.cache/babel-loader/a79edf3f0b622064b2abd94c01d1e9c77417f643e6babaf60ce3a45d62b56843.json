{"ast":null,"code":"var _jsxFileName = \"/Users/valentinodenona/Desktop/REACT/aplikacija-lov/src/pages/PopisDivljaci.js\",\n  _s = $RefreshSig$();\n// src/pages/Zivotinje.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Zivotinje() {\n  _s();\n  const [vrsta, setVrsta] = useState('');\n  const [opis, setOpis] = useState('');\n  const handleVrstaChange = event => {\n    setVrsta(event.target.value);\n  };\n  const handleOpisChange = event => {\n    setOpis(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault(); // Spriječava refresh stranice\n\n    try {\n      // Obratite pažnju da ne navodimo puni URL ovdje zahvaljujući proxy konfiguraciji\n      const response = await fetch('/zivotinje', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          vrsta,\n          opis\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log('Uspješno dodana životinja:', result);\n        setVrsta('');\n        setOpis('');\n        // Ovdje možete dodati logiku za obavještavanje korisnika o uspjehu\n      } else {\n        throw new Error(`Request failed: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Došlo je do greške prilikom slanja podataka:', error);\n      // Ovdje možete dodati logiku za prikaz greške korisniku\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"zivotinje-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"vrsta\",\n        children: \"Vrsta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"vrsta\",\n        value: vrsta,\n        onChange: handleVrstaChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"opis\",\n        children: \"Opis:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"opis\",\n        value: opis,\n        onChange: handleOpisChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"UNESI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Zivotinje, \"10npNEXxjY6mrYDWsl3AhZXs8a8=\");\n_c = Zivotinje;\nexport default Zivotinje;\nvar _c;\n$RefreshReg$(_c, \"Zivotinje\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Zivotinje","_s","vrsta","setVrsta","opis","setOpis","handleVrstaChange","event","target","value","handleOpisChange","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","Error","status","error","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","_c","$RefreshReg$"],"sources":["/Users/valentinodenona/Desktop/REACT/aplikacija-lov/src/pages/PopisDivljaci.js"],"sourcesContent":["// src/pages/Zivotinje.js\nimport React, { useState } from 'react';\n\nfunction Zivotinje() {\n    const [vrsta, setVrsta] = useState('');\n    const [opis, setOpis] = useState('');\n\n    const handleVrstaChange = (event) => {\n        setVrsta(event.target.value);\n    };\n\n    const handleOpisChange = (event) => {\n        setOpis(event.target.value);\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault(); // Spriječava refresh stranice\n\n        try {\n            // Obratite pažnju da ne navodimo puni URL ovdje zahvaljujući proxy konfiguraciji\n            const response = await fetch('/zivotinje', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ vrsta, opis }),\n            });\n\n            if (response.ok) {\n                const result = await response.json();\n                console.log('Uspješno dodana životinja:', result);\n                setVrsta('');\n                setOpis('');\n                // Ovdje možete dodati logiku za obavještavanje korisnika o uspjehu\n            } else {\n                throw new Error(`Request failed: ${response.status}`);\n            }\n        } catch (error) {\n            console.error('Došlo je do greške prilikom slanja podataka:', error);\n            // Ovdje možete dodati logiku za prikaz greške korisniku\n        }\n    };\n\n    return (\n        <div className=\"zivotinje-form\">\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"vrsta\">Vrsta:</label>\n                <input\n                    type=\"text\"\n                    id=\"vrsta\"\n                    value={vrsta}\n                    onChange={handleVrstaChange}\n                />\n\n                <label htmlFor=\"opis\">Opis:</label>\n                <textarea\n                    id=\"opis\"\n                    value={opis}\n                    onChange={handleOpisChange}\n                />\n\n                <button type=\"submit\">UNESI</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Zivotinje;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACjCJ,QAAQ,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,gBAAgB,GAAIH,KAAK,IAAK;IAChCF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,KAAK,IAAK;IAClCA,KAAK,CAACK,cAAc,CAAC,CAAC,CAAC,CAAC;;IAExB,IAAI;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACvCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEjB,KAAK;UAAEE;QAAK,CAAC;MACxC,CAAC,CAAC;MAEF,IAAIS,QAAQ,CAACO,EAAE,EAAE;QACb,MAAMC,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACpCC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEH,MAAM,CAAC;QACjDlB,QAAQ,CAAC,EAAE,CAAC;QACZE,OAAO,CAAC,EAAE,CAAC;QACX;MACJ,CAAC,MAAM;QACH,MAAM,IAAIoB,KAAK,CAAE,mBAAkBZ,QAAQ,CAACa,MAAO,EAAC,CAAC;MACzD;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpE;IACJ;EACJ,CAAC;EAED,oBACI5B,OAAA;IAAK6B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC3B9B,OAAA;MAAM+B,QAAQ,EAAEnB,YAAa;MAAAkB,QAAA,gBACzB9B,OAAA;QAAOgC,OAAO,EAAC,OAAO;QAAAF,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrCpC,OAAA;QACIqC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,OAAO;QACV5B,KAAK,EAAEP,KAAM;QACboC,QAAQ,EAAEhC;MAAkB;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eAEFpC,OAAA;QAAOgC,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnCpC,OAAA;QACIsC,EAAE,EAAC,MAAM;QACT5B,KAAK,EAAEL,IAAK;QACZkC,QAAQ,EAAE5B;MAAiB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eAEFpC,OAAA;QAAQqC,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAAClC,EAAA,CA9DQD,SAAS;AAAAuC,EAAA,GAATvC,SAAS;AAgElB,eAAeA,SAAS;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}