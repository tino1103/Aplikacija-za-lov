{"ast":null,"code":"var _jsxFileName = \"/Users/valentinodenona/Desktop/REACT/Aplikacija-za-lov/src/pages/QRCodeDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { QRCodeSVG } from 'qrcode.react';\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QRCodeDisplay() {\n  _s();\n  const [licenseNumber, setLicenseNumber] = useState('');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('No token available. Please log in again.');\n      return;\n    }\n    try {\n      const decoded = jwtDecode(token); // Dekodiranje JWT tokena\n      if (decoded && decoded.id) {\n        setLicenseNumber(decoded.id); // Postavljanje broja lovačke iskaznice za generiranje QR koda\n      } else {\n        setError('License number is missing in the token.');\n      }\n    } catch (error) {\n      console.error(\"Error decoding token:\", error);\n      setError('Failed to decode token.');\n    }\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), licenseNumber ? /*#__PURE__*/_jsxDEV(QRCodeSVG, {\n      value: licenseNumber,\n      size: 256\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading QR Code...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(QRCodeDisplay, \"oBLSIPYkGjamUVHTYJb67IAGL3E=\");\n_c = QRCodeDisplay;\nexport default QRCodeDisplay;\nvar _c;\n$RefreshReg$(_c, \"QRCodeDisplay\");","map":{"version":3,"names":["React","useState","useEffect","QRCodeSVG","jwtDecode","jsxDEV","_jsxDEV","QRCodeDisplay","_s","licenseNumber","setLicenseNumber","error","setError","token","localStorage","getItem","decoded","id","console","children","fileName","_jsxFileName","lineNumber","columnNumber","value","size","_c","$RefreshReg$"],"sources":["/Users/valentinodenona/Desktop/REACT/Aplikacija-za-lov/src/pages/QRCodeDisplay.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { QRCodeSVG } from 'qrcode.react';\nimport jwtDecode from 'jwt-decode';\n\nfunction QRCodeDisplay() {\n    const [licenseNumber, setLicenseNumber] = useState('');\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            setError('No token available. Please log in again.');\n            return;\n        }\n\n        try {\n            const decoded = jwtDecode(token);  // Dekodiranje JWT tokena\n            if (decoded && decoded.id) {\n                setLicenseNumber(decoded.id); // Postavljanje broja lovačke iskaznice za generiranje QR koda\n            } else {\n                setError('License number is missing in the token.');\n            }\n        } catch (error) {\n            console.error(\"Error decoding token:\", error);\n            setError('Failed to decode token.');\n        }\n    }, []);\n\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    return (\n        <div>\n            <h1>Your QR Code</h1>\n            {licenseNumber ? (\n                <QRCodeSVG value={licenseNumber} size={256} />\n            ) : (\n                <p>Loading QR Code...</p>\n            )}\n        </div>\n    );\n}\n\nexport default QRCodeDisplay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACRD,QAAQ,CAAC,0CAA0C,CAAC;MACpD;IACJ;IAEA,IAAI;MACA,MAAMI,OAAO,GAAGZ,SAAS,CAACS,KAAK,CAAC,CAAC,CAAE;MACnC,IAAIG,OAAO,IAAIA,OAAO,CAACC,EAAE,EAAE;QACvBP,gBAAgB,CAACM,OAAO,CAACC,EAAE,CAAC,CAAC,CAAC;MAClC,CAAC,MAAM;QACHL,QAAQ,CAAC,yCAAyC,CAAC;MACvD;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZO,OAAO,CAACP,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CC,QAAQ,CAAC,yBAAyB,CAAC;IACvC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,KAAK,EAAE;IACP,oBAAOL,OAAA;MAAAa,QAAA,GAAK,SAAO,EAACR,KAAK;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACpC;EAEA,oBACIjB,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBd,aAAa,gBACVH,OAAA,CAACH,SAAS;MAACqB,KAAK,EAAEf,aAAc;MAACgB,IAAI,EAAE;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE9CjB,OAAA;MAAAa,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACf,EAAA,CAtCQD,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAwCtB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}