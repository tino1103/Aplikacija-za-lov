{"ast":null,"code":"var _jsxFileName = \"/Users/valentinodenona/Desktop/REACT/Aplikacija-za-lov/src/pages/QRCodeDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QRCodeDisplay from './QRCodeDisplay'; // Ako je putanja ispravna\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState('');\n\n  // Ova funkcija simulira dobivanje tokena nakon prijave\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: 'user',\n          password: 'pass'\n        })\n      });\n      const data = await response.json();\n      if (data.token) {\n        setToken(data.token); // Spremanje tokena u stanje\n      } else {\n        console.error('No token received');\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), token ? /*#__PURE__*/_jsxDEV(QRCodeDisplay, {\n      token: token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in to view your QR code.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 56\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ASU5DC/3PNAtDu6g7HTvQX3bJZs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","QRCodeDisplay","jsxDEV","_jsxDEV","App","_s","token","setToken","handleLogin","response","fetch","method","headers","body","JSON","stringify","username","password","data","json","console","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/valentinodenona/Desktop/REACT/Aplikacija-za-lov/src/pages/QRCodeDisplay.js"],"sourcesContent":["import React, { useState } from 'react';\nimport QRCodeDisplay from './QRCodeDisplay'; // Ako je putanja ispravna\n\nfunction App() {\n    const [token, setToken] = useState('');\n\n    // Ova funkcija simulira dobivanje tokena nakon prijave\n    const handleLogin = async () => {\n        try {\n            const response = await fetch('/api/login', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ username: 'user', password: 'pass' })\n            });\n            const data = await response.json();\n            if (data.token) {\n                setToken(data.token); // Spremanje tokena u stanje\n            } else {\n                console.error('No token received');\n            }\n        } catch (error) {\n            console.error('Login failed:', error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <button onClick={handleLogin}>Log In</button>\n            {token ? <QRCodeDisplay token={token} /> : <p>Please log in to view your QR code.</p>}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACvCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,QAAQ,EAAE,MAAM;UAAEC,QAAQ,EAAE;QAAO,CAAC;MAC/D,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACZ,KAAK,EAAE;QACZC,QAAQ,CAACW,IAAI,CAACZ,KAAK,CAAC,CAAC,CAAC;MAC1B,CAAC,MAAM;QACHc,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;MACtC;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACzC;EACJ,CAAC;EAED,oBACIlB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBpB,OAAA;MAAQqB,OAAO,EAAEhB,WAAY;MAAAe,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC5CtB,KAAK,gBAAGH,OAAA,CAACF,aAAa;MAACK,KAAK,EAAEA;IAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGzB,OAAA;MAAAoB,QAAA,EAAG;IAAmC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAEd;AAACvB,EAAA,CA5BQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}