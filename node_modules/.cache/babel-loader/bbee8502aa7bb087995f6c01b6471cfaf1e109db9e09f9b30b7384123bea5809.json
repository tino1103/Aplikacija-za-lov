{"ast":null,"code":"var _jsxFileName = \"/Users/valentinodenona/Desktop/REACT4/Aplikacija-za-lov/src/pages/SkeniranjeKoda.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Webcam from 'react-webcam';\nimport jsQR from 'jsqr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QrCodeScanner = () => {\n  _s();\n  const webcamRef = useRef(null);\n  const [qrCodeText, setQrCodeText] = useState('QR kod nije skeniran');\n\n  // Constraints to use the rear-facing camera\n  const videoConstraints = {\n    facingMode: {\n      exact: \"environment\"\n    }\n  };\n  const capture = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    if (imageSrc) {\n      const image = new Image();\n      image.src = imageSrc;\n      image.onload = () => {\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        context.drawImage(image, 0, 0, canvas.width, canvas.height);\n        const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n        const qrCode = jsQR(imageData.data, imageData.width, imageData.height, {\n          inversionAttempts: 'dontInvert'\n        });\n        if (qrCode) {\n          setQrCodeText(qrCode.data);\n        } else {\n          setQrCodeText('Nema QR koda u vidnom polju');\n        }\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      videoConstraints: videoConstraints,\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: capture,\n      children: \"Skeniraj QR kod\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: qrCodeText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(QrCodeScanner, \"h9mQJZuqaQ4AgpuV4UGmuHfxIrQ=\");\n_c = QrCodeScanner;\nexport default QrCodeScanner;\nvar _c;\n$RefreshReg$(_c, \"QrCodeScanner\");","map":{"version":3,"names":["React","useState","useRef","Webcam","jsQR","jsxDEV","_jsxDEV","QrCodeScanner","_s","webcamRef","qrCodeText","setQrCodeText","videoConstraints","facingMode","exact","capture","imageSrc","current","getScreenshot","image","Image","src","onload","canvas","document","createElement","context","getContext","width","height","drawImage","imageData","getImageData","qrCode","data","inversionAttempts","children","audio","ref","screenshotFormat","style","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/valentinodenona/Desktop/REACT4/Aplikacija-za-lov/src/pages/SkeniranjeKoda.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Webcam from 'react-webcam';\nimport jsQR from 'jsqr';\n\nconst QrCodeScanner = () => {\n    const webcamRef = useRef(null);\n    const [qrCodeText, setQrCodeText] = useState('QR kod nije skeniran');\n\n    // Constraints to use the rear-facing camera\n    const videoConstraints = {\n        facingMode: { exact: \"environment\" }\n    };\n\n    const capture = () => {\n        const imageSrc = webcamRef.current.getScreenshot();\n        if (imageSrc) {\n            const image = new Image();\n            image.src = imageSrc;\n            image.onload = () => {\n                const canvas = document.createElement('canvas');\n                const context = canvas.getContext('2d');\n                canvas.width = image.width;\n                canvas.height = image.height;\n                context.drawImage(image, 0, 0, canvas.width, canvas.height);\n                const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n                const qrCode = jsQR(imageData.data, imageData.width, imageData.height, {\n                    inversionAttempts: 'dontInvert',\n                });\n                if (qrCode) {\n                    setQrCodeText(qrCode.data);\n                } else {\n                    setQrCodeText('Nema QR koda u vidnom polju');\n                }\n            };\n        }\n    };\n\n    return (\n        <div>\n            <Webcam\n                audio={false}\n                ref={webcamRef}\n                screenshotFormat=\"image/jpeg\"\n                videoConstraints={videoConstraints}\n                style={{ width: '100%' }}\n            />\n            <button onClick={capture}>Skeniraj QR kod</button>\n            <p>{qrCodeText}</p>\n        </div>\n    );\n};\n\nexport default QrCodeScanner;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,sBAAsB,CAAC;;EAEpE;EACA,MAAMW,gBAAgB,GAAG;IACrBC,UAAU,EAAE;MAAEC,KAAK,EAAE;IAAc;EACvC,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IAClB,MAAMC,QAAQ,GAAGP,SAAS,CAACQ,OAAO,CAACC,aAAa,CAAC,CAAC;IAClD,IAAIF,QAAQ,EAAE;MACV,MAAMG,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;MACzBD,KAAK,CAACE,GAAG,GAAGL,QAAQ;MACpBG,KAAK,CAACG,MAAM,GAAG,MAAM;QACjB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;QAC/C,MAAMC,OAAO,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;QACvCJ,MAAM,CAACK,KAAK,GAAGT,KAAK,CAACS,KAAK;QAC1BL,MAAM,CAACM,MAAM,GAAGV,KAAK,CAACU,MAAM;QAC5BH,OAAO,CAACI,SAAS,CAACX,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEI,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACM,MAAM,CAAC;QAC3D,MAAME,SAAS,GAAGL,OAAO,CAACM,YAAY,CAAC,CAAC,EAAE,CAAC,EAAET,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACM,MAAM,CAAC;QACzE,MAAMI,MAAM,GAAG7B,IAAI,CAAC2B,SAAS,CAACG,IAAI,EAAEH,SAAS,CAACH,KAAK,EAAEG,SAAS,CAACF,MAAM,EAAE;UACnEM,iBAAiB,EAAE;QACvB,CAAC,CAAC;QACF,IAAIF,MAAM,EAAE;UACRtB,aAAa,CAACsB,MAAM,CAACC,IAAI,CAAC;QAC9B,CAAC,MAAM;UACHvB,aAAa,CAAC,6BAA6B,CAAC;QAChD;MACJ,CAAC;IACL;EACJ,CAAC;EAED,oBACIL,OAAA;IAAA8B,QAAA,gBACI9B,OAAA,CAACH,MAAM;MACHkC,KAAK,EAAE,KAAM;MACbC,GAAG,EAAE7B,SAAU;MACf8B,gBAAgB,EAAC,YAAY;MAC7B3B,gBAAgB,EAAEA,gBAAiB;MACnC4B,KAAK,EAAE;QAAEZ,KAAK,EAAE;MAAO;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFtC,OAAA;MAAQuC,OAAO,EAAE9B,OAAQ;MAAAqB,QAAA,EAAC;IAAe;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClDtC,OAAA;MAAA8B,QAAA,EAAI1B;IAAU;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEd,CAAC;AAACpC,EAAA,CA9CID,aAAa;AAAAuC,EAAA,GAAbvC,aAAa;AAgDnB,eAAeA,aAAa;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}